#!/usr/bin/env python3

import os
import re
import subprocess as sp
import sys

MAX_PARALLELISM = 16
make_flags = os.environ.get('MAKEFLAGS')

write_fd = None
job_slots = b''
try:
    if make_flags is not None:
        match = re.search(' --jobserver-fds=([^,]+),([^ ])+', make_flags)
        if match is not None:
            read_fd = int(match[1])
            write_fd = int(match[2])
            job_slots = os.read(read_fd, MAX_PARALLELISM - 1)
    additional_available_cores = len(job_slots)
    if additional_available_cores > 0 and additional_available_cores % 2 == 0:
        os.write(write_fd, job_slots[-1:])
        job_slots = job_slots[:-1]
    parallelism = 1 + additional_available_cores // 2
    print(f'PARALLELISM={parallelism} ./gradlew {" ".join(sys.argv[1:])}')
    os.environ['PARALLELISM'] = str(parallelism)
    cp = sp.run(["./gradlew", *sys.argv[1:]])
    sys.exit(cp.returncode)
finally:
    if write_fd:
        os.write(write_fd, job_slots)
