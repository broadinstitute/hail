 - rebuild the image:
   - add emacs-nox to image
   - installed pip packages to image
   - pre-pull used docker images
   - google libraries

sortedcontainers google-api-python-client google-cloud==0.32.0

 - check worker code
 - 


 - agent running on workers processes multiple jobs in parallel
   - requests job given cores
   - send request if (1) core count changes, or (2) timeout with back-off so steady-state is reasonable,
   - shuts down if no jobs after timeout (1m?)
 - driver maintains instance list,
 - spins up more nodes if below (fixed) target
 - instances get a list of jobs they're handling

 - log in another thread, put events on a queue


 - FIXME 

 - FIXME throttle GCE calls based on 100s running average

 - FIXME why wasn't heal running?
 - shorten timeout on logging?
 - run logging in separate thread and let it feed events through janus queue?

 - target number of instances, scale up if missing (no scale down)

 - make exit cleanup function for run-test.sh

 - semaphore should track cores, not instances

 - make throttle limit an option

 - make master figure out its name
 - status UI
 - update throttle via endpoint
 - merge out and err in run-task2 logs

 - run scale tests: 300, 3K, 30K, 300K, 3M
   - done: 30


 - run tests (later)

get internal IP:
curl -H "Metadata-Flavor: Google" "http://metadata.google.internal/computeMetadata/v1/instance/network-interfaces/0/ip"
