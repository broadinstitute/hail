server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    server_name hail.is www.hail.is;

    location = /cronus_auth {
        internal;
        proxy_pass http://cronus/auth/$cronus_jupyter_instance;
    }

    location ~ /cronus/instance/([^/]+)/(.*) {
        set $cronus_jupyter_instance $1;
        auth_request /cronus_auth;

        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.default.svc.cluster.local/cronus/instance/$1/$2;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    location /cronus/ {
        proxy_pass http://cronus/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400;
    }

    location / {
        root /var/www/html;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hail.is/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hail.is/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    server_name scorecard.hail.is;

    location / {
        proxy_pass http://scorecard/;
    }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hail.is/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hail.is/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    server_name ci.hail.is;

    location ~ /(test-ci-[a-z0-9]+)/(.*) {
        resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://$1.default.svc.cluster.local/$2;
    }

    location / {
        proxy_pass http://hail-ci/;
    }

    # modified, see: https://github.com/certbot/certbot/issues/5550
    # listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hail.is/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hail.is/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    server_name upload.hail.is;

    location / {
        proxy_pass http://upload/;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto https;

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hail.is/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hail.is/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
